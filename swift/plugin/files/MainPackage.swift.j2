import PluginInterface
import SwiftUI

struct {{ projectName }}: PluginInterfaceProtocol {
    var manifest: ProjectManifest = ProjectManifest(displayName: "{{ displayName }}", bundleIdentifier: "{{ bundleIdentifier }}", author: "{{ author }}", shortDescription: "{{ shortDescription }}", repository: "{{ repository }}", keywords: [])
        
    var id = UUID()
    
    var view: some View {
       Text("Hello world")
    }
}


@_cdecl("createPlugin")
public func createPlugin() -> UnsafeMutableRawPointer {
    return Unmanaged.passRetained({{ projectName }}Builder()).toOpaque()
}

public final class {{ projectName }}Builder: PluginBuilder {
    public override func build(fileUtils: FileUtilsProtocol, nsPanelUtils: NSPanelUtilsProtocol, storeUtils: StoreUtilsProtocol) -> any PluginInterfaceProtocol {
        {{ projectName }}()
    }
}

